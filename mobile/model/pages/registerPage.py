import allurefrom appium.webdriver.common.appiumby import AppiumByfrom selene.support.shared import browserfrom selene.support.conditions import havefrom api import *import timeimport pytestdef open_app(server_address=TestData.ip_server, visible_name='Mobile') -> None:    """Метод принимает на вход адрес сервера регистрации и имя пользователя"""    with allure.step('Проходим базовую настройку'):        browser.element((AppiumBy.ACCESSIBILITY_ID, 'onboarding_server_screen.server_input')).type(server_address)        browser.element((AppiumBy.ACCESSIBILITY_ID, 'onboarding_server_screen.continue_button')).click()        browser.element((AppiumBy.ACCESSIBILITY_ID, 'onboarding_profile_screen.user_name_input')).type(visible_name)        browser.element((AppiumBy.ACCESSIBILITY_ID, 'onboarding_profile_screen.done_button')).click()        browser.element((AppiumBy.ACCESSIBILITY_ID, 'onboarding_permissions_screen.done_button')).click()def open_settings() -> None:    """Метод открывает настройки приложения"""    with allure.step('Открываем настройки приложения'):        browser.element((AppiumBy.ACCESSIBILITY_ID, 'tab_bar.settings_label')).click()def input_registered(address: str, authorization: bool = False, login: str = None, password: str = None) -> None:    """Открываем окно регистрации и вводаим данные с сохранением настроек"""    with allure.step("Регистрируемся согласно введенным данным"):        browser.element((AppiumBy.ACCESSIBILITY_ID, 'settings_screen.authorization_button')).click()        browser.element((AppiumBy.ACCESSIBILITY_ID, 'authorization_screen.server_input')).clear().type(address)        if authorization:            browser.element((AppiumBy.ACCESSIBILITY_ID, 'authorization_screen.authorization_section.switch_button')).click()            browser.element((AppiumBy.ACCESSIBILITY_ID, 'authorization_screen.username_input')).clear().type(login)            browser.element((AppiumBy.ACCESSIBILITY_ID, 'authorization_screen.password_input')).clear().type(password)            browser.element((AppiumBy.XPATH,                             '//android.view.ViewGroup[@content-desc="authorization_screen.header.right_button"]'                             '/android.widget.TextView')).click()        time.sleep(5)def check_status_registration(number: str):    """Проверяет статус регистрации"""    with allure.step('Проверяет статус регистрации'):        response = Api().get_data_account(number)        assert get_value(response, 'connected'), 'Регистрацияна сервере не выполнена'def type_number_and_call(number: str) -> None:    """Выполняем вызов"""    with allure.step("Выполняем вызов по указанному номеру"):        browser.element((AppiumBy.ACCESSIBILITY_ID, 'tab_bar.recents_label')).click()        browser.element((AppiumBy.XPATH,                         '//android.view.ViewGroup[@content-desc="recents_screen.numpad_button"]'                         '/android.view.ViewGroup')).click()        browser.element((AppiumBy.ACCESSIBILITY_ID, 'numpad_screen.keyboard_botton')).click()        browser.element((AppiumBy.ACCESSIBILITY_ID, 'numpad_screen.text_input')).type(number)        browser.element((AppiumBy.ACCESSIBILITY_ID, 'numpad_screen.keyboard_botton')).click()        browser.element((AppiumBy.ACCESSIBILITY_ID, 'phone_button')).click()        time.sleep(15)# необходимо для подключения к серверуdef add_contact(name: str, number: str, mail: str = None) -> None:    """Добавляем контакт в адресную книгу"""    with allure.step("Добавляем контакт в адресную книгу"):        browser.element((AppiumBy.XPATH, '//android.widget.Button[@content-desc="tab_bar.contacts_label"]')).click()        browser.element((AppiumBy.ACCESSIBILITY_ID, 'contacts_screen.header.plus_icon')).click()        browser.element((AppiumBy.ACCESSIBILITY_ID, 'contacts_screen.modal_add_contact')).click()        browser.element((AppiumBy.ACCESSIBILITY_ID, 'add_contact_screen.name_section.input')).type(name)        browser.element((AppiumBy.ACCESSIBILITY_ID, 'add_contact_screen.number_section.input')).type(number)        if mail:            browser.element((AppiumBy.ACCESSIBILITY_ID, 'add_contact_screen.email_section.input')).type(mail)        browser.element((AppiumBy.ACCESSIBILITY_ID, 'add_contact_screen.done_button')).click()def click_contact(number) -> None:    """Кликаем по контакту в адресной книге"""    with allure.step("Переходим к настройкам контакта"):        browser.element((AppiumBy.XPATH,                          f'(//android.view.ViewGroup[@content-desc="contacts_screen.contact_item"])'                          f'/*[@text="{number}"]')).click()